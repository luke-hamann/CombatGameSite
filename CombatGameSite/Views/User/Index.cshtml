@model UserViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = Model.SelectedUser!.Name;
}

<h1>
    @Model.SelectedUser.Name
</h1>
<blockquote>
    @Model.SelectedUser.Tagline
</blockquote>
<p>
    <a asp-route-section="combatants">Combatants</a>
    <a asp-route-section="teams">Teams</a>
</p>
@if (Model.SelectedSection == "combatants") {
    <h2>
        Combatants
    </h2>
    @if (Model.CurrentUser?.Id == Model.SelectedUser.Id)
    {
        <p>
            <a asp-controller="Character" asp-action="Add">Create Combatant</a>
        </p>
    }
    <p>
        @Model.Combatants.Count
        combatant@(Model.Combatants.Count == 1 ? "" : "s")
    </p>
    @foreach (Combatant combatant in Model.Combatants)
    {
        <p>
            <a asp-controller="Character" asp-action="Index" asp-route-id="@combatant.Id">@combatant.Name</a>
        </p>
    }
}
else
{
    <h2>
        Teams
    </h2>
    @if (Model.CurrentUser?.Id == Model.SelectedUser.Id)
    {
        <p>
            <a asp-controller="Team" asp-action="Add">Create Team</a>
        </p>
    }
    <p>
        @Model.Teams.Count
        team@(Model.Teams.Count == 1 ? "" : "s")
    </p>
    @foreach (Team team in Model.Teams)
    {
        <h3>
            @team.Name
        </h3>
        <p>
            Score: @team.Score
        </p>
        @await Html.PartialAsync("TeamCombatantList", team);
    }
}
